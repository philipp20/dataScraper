(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5907],{57278:(n,e,i)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/talent-network",function(){return i(21686)}])},78871:(n,e,i)=>{"use strict";i.d(e,{A:()=>l});var a=i(74848),t=i(94145),r=i(9812),o=i(96540);let s=n=>{let{title:e,content:i,children:s}=n,[l,m]=(0,o.useState)(!1);return(0,a.jsxs)("div",{id:"accordion-flush",className:"",children:[(0,a.jsx)("h2",{id:"accordion-flush-heading-1",className:"",children:(0,a.jsxs)("button",{type:"button",className:"flex items-center justify-between space-x-4 w-full py-5 text-left border-b border-gray-200 md:text-2xl font-normal",onClick:()=>m(!l),"aria-expanded":l,"aria-controls":"accordion-flush-body-1",children:[(0,a.jsx)("span",{children:e}),l?(0,a.jsx)(t.A,{className:"flex-none w-6 h-6"}):(0,a.jsx)(r.A,{className:"flex-none w-6 h-6"})]})}),l&&(0,a.jsx)("div",{id:"accordion-flush-body-1","aria-labelledby":"accordion-flush-heading-1",children:(0,a.jsx)("div",{className:"py-5 border-b border-gray-200",children:(0,a.jsx)("p",{className:"text-gray-600 text-sm md:text-lg",children:i})})})]})},l=n=>{let{items:e}=n;return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)("div",{className:"flex flex-col space-y-2 w-full",children:e.map((n,e)=>(0,a.jsx)(s,{title:n.title,content:n.content},e))})})}},59653:(n,e,i)=>{"use strict";i.d(e,{A:()=>o});var a=i(74848),t=i(14953);let r=i.n(t)()(()=>Promise.all([i.e(3342),i.e(3049)]).then(i.bind(i,73049)),{loadableGenerated:{webpack:()=>[73049]},ssr:!1}),o=n=>{let{width:e="100%",height:i="100%",animationData:t,customOptions:o={}}=n,s={loop:o.loop,autoplay:!0,animationData:t,rendererSettings:{preserveAspectRatio:"xMidYMid meet"}};return(0,a.jsx)("div",{style:{pointerEvents:"none"},children:(0,a.jsx)(r,{options:s,width:e,height:i,isClickToPauseDisabled:!0})})}},22457:(n,e,i)=>{"use strict";i.d(e,{A:()=>s});var a=i(96540),t=i(96430),r=i(99223),o=i(10767);let s=()=>{let{user:n,loading:e}=(0,o.A)(),[i,s]=(0,a.useState)(null),[l,m]=(0,a.useState)(!0);(0,a.useEffect)(()=>{if(!n)return;let e=(0,t.H9)(r.T6,"seeker_profiles/".concat(n.uid)),i=(0,t.aQ)(e,n=>{s(n.exists()?n.data():null),m(!1)});return()=>i()},[e,n]),(0,a.useEffect)(()=>{e||n||(m(!1),s(null))},[e,n]);let u=async()=>{if(i){let e=i.lastActive;if(e){let n=e.toDate();if((new Date-n)/36e5<8)return}let a=(0,t.H9)(r.T6,"seeker_profiles/".concat(n.uid));(0,t.mZ)(a,{lastActive:t.Dc.now()})}};return{seekerUserData:i,setLastActive:u,loading:l}}},21686:(n,e,i)=>{"use strict";i.r(e),i.d(e,{default:()=>na});var a=i(74848),t=i(13368),r=i.n(t);let o=JSON.parse('{"v":"5.8.1","fr":60,"ip":0,"op":180,"w":144,"h":144,"nm":"Success","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"particle 06","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":83,"s":[0]},{"t":113,"s":[180]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":83,"s":[68.202,124.447,0],"to":[-0.842,2.328,0],"ti":[0.842,-2.328,0]},{"t":113,"s":[63.149,138.413,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-52.602,-38.889,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":83,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":101,"s":[150,150,100]},{"t":113,"s":[0,0,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"sr","sy":1,"d":1,"pt":{"a":0,"k":4,"ix":3},"p":{"a":0,"k":[0,0],"ix":4},"r":{"a":0,"k":93.907,"ix":5},"ir":{"a":0,"k":2,"ix":6},"is":{"a":0,"k":0,"ix":8},"or":{"a":0,"k":3.332,"ix":7},"os":{"a":0,"k":0,"ix":9},"ix":1,"nm":"Polystar Path 1","mn":"ADBE Vector Shape - Star","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8796,0.6216,0.2604,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.602,-38.889],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Polystar 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":83,"op":114,"st":3,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"particle 05","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":83,"s":[0]},{"t":113,"s":[180]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":83,"s":[79.312,21.925,0],"to":[7.522,-11.104,0],"ti":[-2.881,2.633,0]},{"t":113,"s":[91.361,5.338,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-52.602,-38.889,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":83,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":101,"s":[160,160,100]},{"t":113,"s":[0,0,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"sr","sy":1,"d":1,"pt":{"a":0,"k":4,"ix":3},"p":{"a":0,"k":[0,0],"ix":4},"r":{"a":0,"k":93.907,"ix":5},"ir":{"a":0,"k":2,"ix":6},"is":{"a":0,"k":0,"ix":8},"or":{"a":0,"k":3.332,"ix":7},"os":{"a":0,"k":0,"ix":9},"ix":1,"nm":"Polystar Path 1","mn":"ADBE Vector Shape - Star","hd":false},{"ty":"fl","c":{"a":0,"k":[0.948,0.658,0.252,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.602,-38.889],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Polystar 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":83,"op":114,"st":3,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"particle 04","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":78,"s":[0]},{"t":108,"s":[180]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":78,"s":[113.61,105.968,0],"to":[11.711,10.627,0],"ti":[-3.885,-3.388,0]},{"t":108,"s":[136.917,126.298,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-52.602,-38.889,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":78,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":96,"s":[160,160,100]},{"t":108,"s":[0,0,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"sr","sy":1,"d":1,"pt":{"a":0,"k":4,"ix":3},"p":{"a":0,"k":[0,0],"ix":4},"r":{"a":0,"k":93.907,"ix":5},"ir":{"a":0,"k":2,"ix":6},"is":{"a":0,"k":0,"ix":8},"or":{"a":0,"k":3.332,"ix":7},"os":{"a":0,"k":0,"ix":9},"ix":1,"nm":"Polystar Path 1","mn":"ADBE Vector Shape - Star","hd":false},{"ty":"fl","c":{"a":0,"k":[0.948,0.658,0.252,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.602,-38.889],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Polystar 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":78,"op":109,"st":-2,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"particle 03","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":83,"s":[0]},{"t":113,"s":[180]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":83,"s":[35.065,108.586,0],"to":[-10.544,6.961,0],"ti":[4.625,-1.381,0]},{"t":113,"s":[7.317,116.873,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-52.602,-38.889,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":83,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":101,"s":[170,170,100]},{"t":113,"s":[0,0,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"sr","sy":1,"d":1,"pt":{"a":0,"k":4,"ix":3},"p":{"a":0,"k":[0,0],"ix":4},"r":{"a":0,"k":93.907,"ix":5},"ir":{"a":0,"k":2,"ix":6},"is":{"a":0,"k":0,"ix":8},"or":{"a":0,"k":3.332,"ix":7},"os":{"a":0,"k":0,"ix":9},"ix":1,"nm":"Polystar Path 1","mn":"ADBE Vector Shape - Star","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8796,0.6216,0.2604,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.602,-38.889],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Polystar 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":83,"op":114,"st":3,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"particle 02","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":78,"s":[0]},{"t":108,"s":[180]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":78,"s":[122.25,45.75,0],"to":[5.689,-10.843,0],"ti":[-2.794,2.852,0]},{"t":108,"s":[139.012,28.64,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-52.602,-38.889,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":78,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":96,"s":[160,160,100]},{"t":108,"s":[0,0,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"sr","sy":1,"d":1,"pt":{"a":0,"k":4,"ix":3},"p":{"a":0,"k":[0,0],"ix":4},"r":{"a":0,"k":93.907,"ix":5},"ir":{"a":0,"k":2,"ix":6},"is":{"a":0,"k":0,"ix":8},"or":{"a":0,"k":3.332,"ix":7},"os":{"a":0,"k":0,"ix":9},"ix":1,"nm":"Polystar Path 1","mn":"ADBE Vector Shape - Star","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8796,0.6216,0.2604,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.602,-38.889],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Polystar 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":78,"op":109,"st":-2,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"particle 01","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":78,"s":[0]},{"t":108,"s":[180]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":78,"s":[30.5,37,0],"to":[-3.417,-3.083,0],"ti":[3.417,3.083,0]},{"t":108,"s":[10,18.5,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-52.602,-38.889,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":78,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":96,"s":[200,200,100]},{"t":108,"s":[0,0,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"sr","sy":1,"d":1,"pt":{"a":0,"k":4,"ix":3},"p":{"a":0,"k":[0,0],"ix":4},"r":{"a":0,"k":93.907,"ix":5},"ir":{"a":0,"k":2,"ix":6},"is":{"a":0,"k":0,"ix":8},"or":{"a":0,"k":3.332,"ix":7},"os":{"a":0,"k":0,"ix":9},"ix":1,"nm":"Polystar Path 1","mn":"ADBE Vector Shape - Star","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8796,0.6216,0.2604,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.602,-38.889],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Polystar 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":78,"op":109,"st":-2,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"check","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":35,"s":[210]}],"ix":10},"p":{"a":0,"k":[69.907,69.152,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":73,"s":[75.004,75.004,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":81,"s":[90,90,100]},{"t":89,"s":[75.004,75.004,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[{"i":[[0,0],[-11.615,-9.351],[0,-19.335]],"o":[[10.267,0],[11.118,8.951],[0,30.633]],"v":[[2.42,-57.705],[38.686,-44.185],[58.384,-2.2]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":33,"s":[{"i":[[0,0],[-11.615,-9.351],[0,-19.335]],"o":[[10.267,0],[11.118,8.951],[0,30.633]],"v":[[2.42,-57.705],[38.686,-44.185],[58.384,-2.2]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":36,"s":[{"i":[[0,0],[-10.322,-12.772],[13.314,-3.359]],"o":[[10.267,0],[9.035,10.709],[-10.436,1.501]],"v":[[13.242,-55.293],[47.812,-32.712],[42.255,-3.472]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":39,"s":[{"i":[[0,0],[-9.03,-16.193],[21.751,6.587]],"o":[[10.267,0],[6.952,12.466],[-13.267,-4.018]],"v":[[18.267,-54.923],[51.361,-29.565],[26.125,-4.743]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":43,"s":[{"i":[[0,0],[-0.534,-11.925],[21.788,10.212]],"o":[[10.581,5.106],[-0.522,10.078],[-10.868,-4.694]],"v":[[27.274,-49.918],[45.22,-23.249],[9.334,-14.023]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":47,"s":[{"i":[[0,0],[11.001,0.995],[18.105,1.995]],"o":[[-11.561,-0.685],[-8.654,-0.783],[-9.968,-1.098]],"v":[[50.17,-17.522],[27.741,-19.24],[-7.458,-23.303]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":48.691,"s":[{"i":[[0,0],[12.53,-0.046],[9.276,-0.888]],"o":[[-13.893,-0.315],[-8.301,1.204],[-5.291,5.836]],"v":[[34.635,-19.508],[7.346,-19.277],[-11.431,-17.262]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":49.539,"s":[{"i":[[0,0],[4.588,-2.448],[2.351,-6.845]],"o":[[-11.717,-1.675],[-4.133,2.779],[-2.952,9.302]],"v":[[26.867,-20.5],[-8.401,-25.906],[-13.418,-14.242]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":52.076,"s":[{"i":[[0,0],[3.579,-1.467],[3.576,-8.939]],"o":[[-11.874,-2.665],[-5.957,6.348],[-2.426,7.997]],"v":[[28.396,-17.801],[-11.362,-27.097],[-23.194,5.874]],"c":false}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":56.309,"s":[{"i":[[0,0],[7.254,-2.434],[3.41,-9.228]],"o":[[-11.874,-2.665],[-8.216,9.769],[-2.426,7.997]],"v":[[28.396,-17.801],[-11.362,-27.097],[-26.988,17.302]],"c":false}]},{"t":69,"s":[{"i":[[0,0],[-0.352,-0.526],[4.936,-26.724]],"o":[[-12.771,-1.639],[-5.433,26.083],[-3.439,18.621]],"v":[[14.934,-21.698],[-10.03,-24.618],[-20.232,28.477]],"c":false}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":75,"s":[0.6118,0.4186,0.1482,1]},{"t":78,"s":[1,1,1,1]}],"ix":3},"o":{"a":0,"k":90,"ix":4},"w":{"a":0,"k":18,"ix":5},"lc":2,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":35,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":55,"s":[30]},{"t":74,"s":[0]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[25]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":35,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":55,"s":[100]},{"t":74,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"circle background","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":65,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":80,"s":[100]},{"t":87,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[71.626,72.673,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":65,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,2.667]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":80,"s":[95,95,100]},{"t":87,"s":[85,85,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[109.14,109.14],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"bm":0,"g":{"p":13,"k":{"a":0,"k":[0,0.51,0.3683,0.17,0.05,0.5285,0.3797,0.1715,0.1,0.532,0.3803,0.168,0.175,0.5735,0.4039,0.1665,0.25,0.6162,0.4277,0.1638,0.375,0.656,0.451,0.164,0.5,0.6804,0.4634,0.1596,0.625,0.7515,0.5002,0.1485,0.75,0.8256,0.5376,0.1344,0.825,0.8575,0.5512,0.1225,0.901,0.885,0.5642,0.115,0.95,0.8869,0.5561,0.0931,0.999,0.9065,0.5594,0.0735],"ix":9}},"s":{"a":0,"k":[21.422,53.019],"ix":5},"e":{"a":0,"k":[-43.02,-50.875],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0.374,-0.673],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[114.32,114.32],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":65,"op":180,"st":-10,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"flare","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":77,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":78,"s":[20]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":94,"s":[20]},{"t":105,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[71.626,72.673,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.486,0.486,1.519]},"o":{"x":[0.167,0.167,0.167],"y":[0.9,0.9,15]},"t":78,"s":[95,95,100]},{"t":105,"s":[115,115,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[109.14,109.14],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[0.6235,0.4275,0.1529,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0.374,-0.673],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[114.32,114.32],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":65,"op":180,"st":-10,"bm":0}],"markers":[]}');var s=i(10767),l=i(2543),m=i.n(l),u=i(96430),d=i(96540),x=i(99223),h=i(74530),p=i(79637),c=i(36756),f=i(46014),y=i(30457),v=i(7458),b=i(14544),k=i(50879),g=i(7387),_=i(64742),$=i(32859),T=i(24527),V=i(5444),D=i(1194),K=i(95323),S=i(40714),P=i(16217),A=i(96452),G=i(72058),w=i(94335),E=i(91106),B=i.n(E),I=i(78871),j=i(59653);let O=JSON.parse('{"v":"5.7.11","fr":25,"ip":0,"op":51,"w":512,"h":512,"nm":"Comp 32","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Layer 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[256,256,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"ŝlosilo pli pura","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"nm":"ŝlosilo pli pura 2","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":2,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"nm":"ŝlosilo pli pura 3","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":3,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.39,-0.698],[0.487,-0.244],[0.39,0.698],[-0.49,0.246]],"o":[[0.39,0.698],[-0.49,0.246],[-0.39,-0.698],[0.487,-0.244]],"v":[[-15.788,-65.232],[-15.966,-63.524],[-17.561,-64.343],[-17.38,-66.052]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.14,-2.029],[1.415,-0.709],[0.122,-0.029],[0.61,0.244],[0.638,1.14],[-1.427,0.717]],"o":[[1.13,2.028],[-0.109,0.056],[-0.544,0.16],[-0.949,-0.387],[-1.134,-2.033],[1.415,-0.709]],"v":[[-14.058,-65.044],[-14.576,-60.078],[-14.924,-59.946],[-16.687,-60.09],[-19.216,-62.454],[-18.69,-67.432]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-18.594,-67.126],"ix":2},"a":{"a":0,"k":[-18.594,-67.126],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":6,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":11.167,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":16.333,"s":[60,60]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":21.5,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":26.667,"s":[60,60]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":31.833,"s":[50,50]},{"t":37,"s":[100,100]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.39,-0.698],[0.487,-0.244],[0.39,0.698],[-0.49,0.246]],"o":[[0.39,0.698],[-0.49,0.246],[-0.39,-0.698],[0.487,-0.244]],"v":[[-37.701,-47.016],[-37.879,-45.308],[-39.473,-46.127],[-39.293,-47.836]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.14,-2.029],[1.415,-0.709],[0.122,-0.029],[0.61,0.244],[0.638,1.14],[-1.427,0.717]],"o":[[1.13,2.028],[-0.109,0.056],[-0.544,0.16],[-0.949,-0.387],[-1.134,-2.033],[1.415,-0.709]],"v":[[-35.971,-46.828],[-36.489,-41.863],[-36.837,-41.73],[-38.6,-41.874],[-41.129,-44.239],[-40.603,-49.217]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-40.565,-48.786],"ix":2},"a":{"a":0,"k":[-40.565,-48.786],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":6,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":11.167,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":16.333,"s":[60,60]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":21.5,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":26.667,"s":[60,60]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":31.833,"s":[50,50]},{"t":37,"s":[100,100]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.034,-4.189]],"o":[[-3.955,1.379],[0,0]],"v":[[-14.152,-70.745],[-21.02,-61.158]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.034,-4.189]],"o":[[-3.955,1.379],[0,0]],"v":[[-36.461,-51.578],[-43.328,-41.992]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.375,-0.235],[0.256,-0.301],[0.044,-0.169],[-0.457,0.07],[-0.75,0.642],[0.583,0.387],[0.531,-0.2]],"o":[[-0.349,0.219],[-0.113,0.133],[-0.174,0.666],[0.97,-0.149],[0.335,-0.286],[-0.528,-0.351],[-0.393,0.148]],"v":[[-21.996,-48.452],[-22.922,-47.675],[-23.183,-47.225],[-22.093,-46.566],[-19.385,-47.76],[-18.935,-49.143],[-20.82,-49.025]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.88,0.699],[0.705,-0.216],[2.168,-2.505],[0.108,-0.407],[-0.998,-0.252],[-0.813,3.176],[-0.109,1.239]],"o":[[-0.386,-0.307],[-3.197,0.979],[-0.275,0.318],[-0.328,1.239],[2.281,0.576],[0.308,-1.202],[0.085,-0.971]],"v":[[-17.42,-51.066],[-19.071,-51.142],[-27.221,-45.539],[-27.878,-44.474],[-25.942,-42.282],[-17.546,-43.906],[-16.846,-47.562]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-19.632,-44.016],[-12.915,-36.394]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":5,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.997,-0.856],[0.425,-1.553],[6.114,-2.01],[2.292,0.32],[0.028,0.086],[-5.04,-0.711],[-2.417,1.806]],"o":[[0.03,1.464],[-1.718,6.214],[-2.103,0.678],[-0.044,-0.066],[-1.373,-5.42],[0.563,-2.965],[1.81,-1.341]],"v":[[0.23,-42.936],[-0.345,-38.413],[-13.148,-25.004],[-19.836,-24.519],[-19.916,-24.742],[-10.342,-34.281],[-6.161,-42.057]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235294819,0.364705890417,0.349019616842,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.051,-2.553],[0.425,-1.553],[6.114,-2.01],[2.292,0.32],[2.017,0.871],[-2.307,0.916],[-3.654,8.304],[-1.107,-2.106]],"o":[[0.03,1.464],[-1.718,6.214],[-2.103,0.678],[-2.125,-0.268],[-2.265,-1.003],[8.448,-3.305],[0.943,-2.169],[1.183,2.294]],"v":[[0.23,-42.936],[-0.345,-38.413],[-13.148,-25.004],[-19.836,-24.519],[-26.111,-26.301],[-26.009,-31.501],[-6.801,-49.907],[-1.717,-50.185]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-15.461,-39.363],"ix":2},"a":{"a":0,"k":[-15.461,-39.363],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":0,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":6,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":26,"s":[100,100]},{"t":32,"s":[50,50]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[3.207,1.254],[2.67,2.252],[-2.801,-2.083],[4.273,1.334],[-3.094,-2.693]],"o":[[-3.417,-0.424],[-3.253,-1.272],[1.533,3.136],[-4.436,0.602],[3.094,2.693],[0,0]],"v":[[-29.651,-68.866],[-39.546,-71.734],[-48.752,-76.639],[-42.126,-68.66],[-55.401,-69.776],[-46.118,-61.698]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.539,-0.554],[-1.349,-1.242],[-1.237,-0.458],[1.588,-0.155],[2.137,0.484],[0.331,0.106],[0.291,0.02],[-0.135,-0.115],[-0.225,-0.2],[-0.433,-0.417],[-0.795,-0.903],[-0.071,-0.082],[1.745,1.439],[0.499,0.412],[0.969,0.799],[-0.047,-0.002],[-0.125,-0.029],[-0.262,-0.033],[-0.273,-0.044],[-0.354,-0.066],[-1.001,-0.135],[-2.018,0.318],[-0.224,0.045],[0.585,0.468],[0.313,0.292],[0.271,0.333],[0.457,0.626],[0.19,0.619],[-0.051,0.027],[-0.031,-0.009],[-0.364,-0.054],[-0.211,-0.248]],"o":[[1.278,1.315],[0.97,0.893],[-1.477,0.604],[-2.167,0.211],[-0.339,-0.077],[-0.288,-0.093],[0.012,0.192],[0.229,0.195],[0.45,0.399],[0.866,0.835],[0.072,0.081],[-1.958,-1.133],[-0.499,-0.412],[-0.969,-0.799],[0.017,0.014],[0.128,0.004],[0.256,0.06],[0.271,0.034],[0.356,0.058],[0.992,0.184],[2.008,0.271],[0.226,-0.036],[-0.501,-0.558],[-0.334,-0.267],[-0.314,-0.293],[-0.489,-0.601],[-0.382,-0.523],[-0.017,-0.055],[0.029,-0.015],[0.355,0.097],[0.326,0.049],[0.497,0.585]],"v":[[-45.171,-73.637],[-41.265,-69.765],[-38.022,-67.542],[-42.688,-66.549],[-49.213,-66.754],[-50.22,-67.028],[-51.171,-67.368],[-50.676,-66.871],[-49.995,-66.279],[-48.671,-65.053],[-46.177,-62.446],[-45.963,-62.201],[-51.421,-66.22],[-52.918,-67.455],[-55.825,-69.853],[-55.478,-69.896],[-55.098,-69.838],[-54.33,-69.651],[-53.527,-69.56],[-52.462,-69.373],[-49.48,-68.851],[-43.457,-68.747],[-42.781,-68.868],[-44.414,-70.411],[-45.408,-71.221],[-46.27,-72.176],[-47.69,-74.018],[-48.638,-75.702],[-48.612,-75.859],[-48.518,-75.858],[-47.437,-75.63],[-46.655,-75.377]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.279,1.336],[-2.973,-2.605],[-0.101,-0.096],[0,0],[0,0],[0,0],[3.202,1.255],[2.485,1.871],[0.28,0.239],[-2.797,-2.077]],"o":[[2.985,2.602],[0.114,0.093],[0,0],[0,0],[0,0],[-3.407,-0.427],[-2.923,-1.135],[-0.3,-0.208],[1.535,3.137],[-4.437,0.606]],"v":[[-55.406,-69.78],[-46.45,-61.974],[-46.12,-61.693],[-45.94,-61.774],[-45.496,-61.97],[-29.655,-68.86],[-39.546,-71.739],[-47.884,-75.971],[-48.754,-76.642],[-42.128,-68.666]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.268,0.685],[-0.436,-0.598],[0,0],[0.458,0.01],[0,0],[0.106,-0.155],[0,0],[0.139,0.441],[0,0],[0.179,0.06],[0,0],[-0.382,0.259],[0,0],[-0.452,-0.207],[-0.423,0.001],[-0.869,0.596],[-0.372,-0.766],[-1.23,-0.452]],"o":[[0.651,-0.352],[0,0],[0.276,0.381],[0,0],[-0.176,-0.008],[0,0],[-0.27,0.376],[0,0],[-0.054,-0.182],[0,0],[-0.439,-0.143],[0,0],[0.408,-0.283],[0.414,0.189],[1.061,0.003],[0.702,-0.482],[0.569,1.17],[1.354,0.494]],"v":[[-65.457,-112.774],[-63.564,-112.373],[-62.197,-110.499],[-62.658,-109.611],[-68.661,-109.763],[-69.123,-109.526],[-72.649,-104.675],[-73.635,-104.84],[-75.344,-110.59],[-75.708,-110.966],[-81.418,-112.825],[-81.56,-113.803],[-80.128,-114.798],[-78.737,-114.943],[-77.478,-114.636],[-74.503,-115.572],[-72.44,-115.01],[-69.636,-112.42]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.949019610882,0.678431391716,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.152,-0.431],[0,0],[-0.097,-0.153],[0,0],[0,0],[0.458,0.01],[0,0],[0.106,-0.155],[0,0],[0.139,0.441],[0,0],[0.179,0.06],[0,0],[-0.382,0.259],[0,0],[0,0],[0.001,0.185],[0,0],[-0.368,-0.279],[0,0],[-0.164,0.053],[0,0]],"o":[[0,0],[-0.052,0.17],[0,0],[0,0],[0.276,0.381],[0,0],[-0.176,-0.008],[0,0],[-0.27,0.376],[0,0],[-0.054,-0.182],[0,0],[-0.439,-0.143],[0,0],[0,0],[0.153,-0.096],[0,0],[-0.008,-0.457],[0,0],[0.147,0.115],[0,0],[0.441,-0.139]],"v":[[-63.802,-121.528],[-65.803,-115.863],[-65.731,-115.347],[-64.407,-113.528],[-62.197,-110.499],[-62.658,-109.611],[-68.661,-109.763],[-69.123,-109.526],[-72.649,-104.675],[-73.635,-104.84],[-75.344,-110.59],[-75.708,-110.966],[-81.418,-112.825],[-81.56,-113.803],[-79.399,-115.304],[-76.617,-117.219],[-76.378,-117.672],[-76.376,-123.675],[-75.485,-124.112],[-70.723,-120.467],[-70.217,-120.381],[-64.501,-122.237]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.992156863213,0.772549033165,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0]],"o":[[0,0]],"v":[[-71.36,-114.546]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0.953,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.212,-0.3],[0.3,-0.212],[0.212,0.3],[-0.3,0.212]],"o":[[0.212,0.3],[-0.3,0.212],[-0.212,-0.3],[0.3,-0.212]],"v":[[-60.359,-99.333],[-60.518,-98.407],[-61.444,-98.566],[-61.285,-99.492]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.519,-0.721],[0.73,-0.526],[0.51,0.729],[-0.729,0.51]],"o":[[0.51,0.729],[-0.729,0.51],[-0.526,-0.73],[0.721,-0.519]],"v":[[-54.002,-65.421],[-54.393,-63.167],[-56.631,-63.556],[-56.249,-65.804]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.519,-0.721],[0.73,-0.526],[0.51,0.729],[-0.729,0.51]],"o":[[0.51,0.729],[-0.729,0.51],[-0.526,-0.73],[0.721,-0.519]],"v":[[-34.423,-78.251],[-34.814,-75.996],[-37.052,-76.386],[-36.67,-78.633]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.673,-0.936],[0.947,-0.683],[0.661,0.945],[-0.945,0.661]],"o":[[0.661,0.945],[-0.945,0.661],[-0.683,-0.947],[0.936,-0.673]],"v":[[-51.664,-79.94],[-52.171,-77.015],[-55.075,-77.521],[-54.579,-80.436]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.385,-0.545],[0.545,-0.385],[0.385,0.545],[-0.545,0.385]],"o":[[0.385,0.545],[-0.545,0.385],[-0.385,-0.545],[0.545,-0.385]],"v":[[-47.663,-92.26],[-47.952,-90.577],[-49.636,-90.866],[-49.347,-92.549]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.546,-0.773],[0.773,-0.546],[0.546,0.773],[-0.773,0.546]],"o":[[0.546,0.773],[-0.773,0.546],[-0.546,-0.773],[0.773,-0.546]],"v":[[-63.972,-89.422],[-64.382,-87.033],[-66.77,-87.443],[-66.36,-89.831]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0.098,-0.304],[0.313,-0.219],[0,0],[0.006,-0.004],[0.149,1.026],[0,0],[-0.171,0.122],[-0.072,0.03],[-0.12,0.031],[-0.138,-0.003]],"o":[[0,0],[0.076,0.315],[-0.106,0.329],[0,0],[-0.006,0.004],[-0.856,0.586],[0,0],[0.115,-0.153],[0.068,-0.047],[0.112,-0.064],[0.136,-0.035],[0,0]],"v":[[-67.044,-109.679],[-67.039,-109.673],[-67.07,-108.737],[-67.704,-107.874],[-67.71,-107.87],[-67.729,-107.856],[-69.913,-108.896],[-70.109,-110.247],[-69.687,-110.663],[-69.479,-110.786],[-69.121,-110.927],[-68.718,-110.979]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":7,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.031,-0.801],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.229,-0.601],[9.939,-5.761],[2.433,0.399],[0.09,0.633],[0,0],[0,0],[0,0],[0,0],[0.001,0.003],[0,0],[0,0],[0,0]],"o":[[-0.184,-1.292],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.508,0.394],[-0.885,2.321],[-9.936,5.759],[-0.631,-0.103],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-69.892,-108.727],[-67.563,-110.08],[-61.73,-105.551],[-60.342,-104.475],[-54.204,-99.709],[-51.4,-97.53],[-47.887,-94.802],[-44.589,-92.241],[-35.112,-84.884],[-31.777,-82.294],[-29.57,-80.58],[-29.105,-78.907],[-43.011,-65.028],[-61.895,-59.902],[-63.106,-61.133],[-63.754,-65.686],[-64.188,-68.725],[-65.316,-76.642],[-65.879,-80.571],[-65.88,-80.574],[-67.111,-89.219],[-67.37,-91.042],[-70.024,-109.66]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.031,-0.801],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.229,-0.601],[9.939,-5.761],[2.433,0.399],[0.09,0.633],[0,0],[0,0],[0,0],[0,0],[0.001,0.003],[0,0],[0,0],[0,0]],"o":[[-0.184,-1.292],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.508,0.394],[-0.885,2.321],[-9.936,5.759],[-0.631,-0.103],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-69.892,-108.727],[-67.563,-110.08],[-61.73,-105.551],[-60.342,-104.475],[-54.204,-99.709],[-51.4,-97.53],[-47.887,-94.802],[-44.589,-92.241],[-35.112,-84.884],[-31.777,-82.294],[-29.57,-80.58],[-29.105,-78.907],[-43.011,-65.028],[-61.895,-59.902],[-63.106,-61.133],[-63.754,-65.686],[-64.188,-68.725],[-65.316,-76.642],[-65.879,-80.571],[-65.88,-80.574],[-67.111,-89.219],[-67.37,-91.042],[-68.633,-99.901]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.227450981736,0.800000011921,0.505882382393,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":3,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.219,1.755],[2.039,-0.323],[0.812,-2.266]],"o":[[-0.249,-2.137],[-1.219,-1.755],[-2.307,0.365],[0,0]],"v":[[-6.863,-83.003],[-8.824,-89.073],[-14.159,-91.754],[-18.905,-86.925]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.508,-1.571],[0.38,-0.355],[0.455,0.258],[0.151,0.359],[1.174,1.415],[0.233,0.04],[0.246,-0.234],[0.491,-0.653],[0.486,0.249],[0.395,0.704],[0.65,0.497],[-0.251,0.667],[-0.945,1.175],[-1.481,0.087],[-1.009,-1.32],[-0.474,-1.63]],"o":[[-0.163,0.505],[-0.38,0.355],[-0.331,-0.187],[-0.719,-1.709],[-0.155,-0.187],[-0.332,-0.057],[-0.589,0.559],[-0.329,0.438],[-0.703,-0.36],[-0.797,-0.103],[-0.562,-0.43],[0.537,-1.43],[0.945,-1.175],[1.557,-0.092],[1.062,1.389],[0.469,1.611]],"v":[[-7.604,-79.144],[-8.359,-77.777],[-9.782,-77.518],[-10.465,-78.428],[-12.38,-83.608],[-12.956,-84.015],[-13.837,-83.599],[-15.46,-81.777],[-16.773,-81.076],[-17.302,-83.332],[-19.636,-83.245],[-19.767,-85.241],[-17.682,-89.275],[-13.915,-91.443],[-8.975,-89.386],[-7.348,-84.272]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-3.035,-2.538],[0.673,3.85],[9.192,-1.59],[0.056,-7.53]],"o":[[3.513,1.821],[1.538,-3.222],[-1.673,-9.577],[-6.77,1.171],[0,0]],"v":[[-10.998,-76.127],[-0.243,-69.668],[1.215,-80.343],[-18.46,-94.816],[-32.094,-79.611]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.706,0.928],[-0.154,-0.226],[0,0],[-3.03,-2.535],[0.672,3.855],[3.729,2.616],[-0.752,-3.302],[1.328,-1.514],[1.397,-0.176]],"o":[[0.145,0.231],[0,0],[3.513,1.821],[1.534,-3.215],[-0.862,-4.942],[2.18,2.613],[0.448,1.954],[-0.923,1.063],[-1.925,0.225]],"v":[[-11.605,-76.837],[-11.146,-76.146],[-11,-76.122],[-0.242,-69.672],[1.216,-80.348],[-6.141,-92.018],[-1.323,-83.225],[-2.245,-77.498],[-5.976,-75.75]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.051,-7.534],[0,0],[0,0],[-3.03,-2.535],[0.672,3.855],[3.729,2.616],[0,0],[4.441,-0.767]],"o":[[0,0],[0,0],[3.513,1.821],[1.534,-3.215],[-0.862,-4.942],[-0.005,-0.009],[-3.507,-2.441],[-6.773,1.166]],"v":[[-32.09,-79.612],[-11.146,-76.146],[-11,-76.122],[-0.242,-69.672],[1.216,-80.348],[-6.141,-92.018],[-6.155,-92.022],[-18.458,-94.816]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.079,1.844],[-1.151,1.714],[-2.397,-0.217]],"o":[[-1.833,-1.125],[-1.079,-1.844],[1.303,-1.939],[0,0]],"v":[[-72.449,-41.498],[-77.129,-45.833],[-77.315,-51.8],[-70.936,-54.072]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":2,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.639,-0.201],[-0.482,0.196],[0.042,0.521],[0.262,0.288],[0.789,1.661],[-0.062,0.228],[-0.316,0.125],[-0.799,0.17],[0.021,0.546],[0.473,0.654],[0.177,0.799],[0.711,0.053],[1.464,-0.363],[0.703,-1.307],[-0.772,-1.471],[-1.278,-1.117]],"o":[[0.526,0.064],[0.482,-0.196],[-0.031,-0.379],[-1.247,-1.371],[-0.104,-0.219],[0.088,-0.326],[0.755,-0.299],[0.536,-0.114],[-0.031,-0.789],[0.242,-0.766],[-0.153,-0.691],[-1.523,-0.115],[-1.464,0.363],[-0.739,1.374],[0.813,1.548],[1.264,1.104]],"v":[[-68.637,-40.546],[-67.079,-40.654],[-66.245,-41.836],[-66.783,-42.839],[-70.674,-46.757],[-70.801,-47.45],[-70.053,-48.074],[-67.717,-48.78],[-66.528,-49.676],[-68.351,-51.105],[-67.29,-53.186],[-69.045,-54.145],[-73.582,-53.952],[-77.135,-51.448],[-77.349,-46.101],[-73.396,-42.472]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":2,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[3.906,-5.644],[-4.197,-5.803],[-1.746,-1.207],[-3.569,0.035],[0.176,3.959]],"o":[[-6.86,-3.122],[-4.148,6.001],[1.174,1.62],[3.213,2.224],[-1.017,-3.826],[0,0]],"v":[[-58.747,-62.955],[-78.279,-56.996],[-77.817,-37.334],[-73.441,-33.048],[-63.143,-29.874],[-64.475,-42.353]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":2,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.048,-4.204],[-1.746,-1.207],[-3.217,-0.131],[0,0],[-0.212,-0.011],[-0.131,0.003],[0.055,0.306],[0.005,0.009],[0.102,0.933],[0.042,0.471],[0.027,0.468],[0.019,0.412],[0.005,0.239],[0.018,0.304],[-0.002,0.038],[-0.004,0.014],[0.103,0.473],[0.168,-0.024],[0.022,-0.339],[0.082,-0.929],[0.71,-0.783],[1.752,0.756],[1.241,1.8],[0.55,1.376],[0.29,1.912],[0.166,1.234]],"o":[[1.174,1.62],[2.915,2.021],[0,0],[0.201,-0.007],[0.127,0.011],[-0.093,0.005],[-0.01,-0.018],[-0.177,-0.937],[-0.056,-0.475],[-0.042,-0.472],[-0.029,-0.407],[-0.014,-0.234],[-0.018,-0.304],[-0.001,-0.023],[0.004,-0.014],[-0.001,-0.338],[-0.049,-0.274],[-0.545,0.06],[-0.091,0.934],[-0.093,1.057],[-1.392,1.55],[-2.041,-0.88],[-0.872,-1.263],[-0.734,-1.801],[-0.195,-1.241],[-1.239,4.882]],"v":[[-77.817,-37.334],[-73.441,-33.048],[-64.149,-29.9],[-64.14,-29.905],[-63.538,-29.889],[-63.143,-29.874],[-63.549,-31.671],[-63.561,-31.713],[-63.969,-34.523],[-64.118,-35.936],[-64.219,-37.352],[-64.296,-38.577],[-64.332,-39.269],[-64.385,-40.181],[-64.385,-40.265],[-64.379,-40.317],[-64.451,-41.871],[-64.768,-42.317],[-65.247,-40.313],[-65.496,-37.512],[-66.429,-34.534],[-71.785,-33.929],[-76.622,-38.239],[-78.801,-42.278],[-80.139,-47.986],[-80.677,-51.713]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":2,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.048,-4.204],[-1.746,-1.207],[-3.217,-0.131],[0,0],[-0.196,0.016],[-0.131,0.003],[0.116,0.622],[0.005,0.009],[0.102,0.933],[0.042,0.471],[0.027,0.468],[0.019,0.412],[0.005,0.239],[0.019,0.327],[-0.004,0.014],[0.016,0.511],[0.01,0.164],[0,0],[3.906,-5.644],[0.46,-1.848]],"o":[[1.174,1.62],[2.915,2.021],[0,0],[0.208,0.025],[0.127,0.011],[-0.151,-0.578],[-0.01,-0.018],[-0.177,-0.937],[-0.056,-0.475],[-0.042,-0.472],[-0.029,-0.407],[-0.014,-0.234],[-0.024,-0.336],[0.004,-0.014],[-0.035,-0.523],[-0.01,-0.164],[0,0],[-6.86,-3.122],[-1.142,1.648],[-1.239,4.882]],"v":[[-77.817,-37.334],[-73.441,-33.048],[-64.149,-29.9],[-64.14,-29.905],[-63.538,-29.889],[-63.143,-29.874],[-63.549,-31.671],[-63.561,-31.713],[-63.969,-34.523],[-64.118,-35.936],[-64.219,-37.352],[-64.296,-38.577],[-64.332,-39.269],[-64.385,-40.265],[-64.379,-40.317],[-64.451,-41.871],[-64.475,-42.353],[-58.747,-62.955],[-78.279,-56.996],[-80.677,-51.713]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":2,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-7.017,-12.683],[-15.432,2.696],[-0.193,0.036],[-3.726,2.062],[-0.45,0.276],[-2.64,3.127],[-0.168,0.208],[7.518,13.589],[17.206,-9.52],[3.237,-4.21]],"o":[[7.853,14.193],[0.179,-0.028],[3.955,-0.752],[0.468,-0.259],[3.678,-2.23],[0.172,-0.202],[9.395,-11.59],[-9.64,-17.423],[-4.646,2.57],[-8.736,11.363]],"v":[[-60.769,-24.763],[-21.518,-6.328],[-20.966,-6.421],[-9.371,-10.62],[-7.995,-11.417],[1.507,-19.529],[2.016,-20.147],[5.959,-61.682],[-45.446,-75.821],[-57.439,-65.531]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","np":2,"cix":2,"bm":0,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0]],"o":[[0,0]],"v":[[-26.246,-71.668]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 14","np":2,"cix":2,"bm":0,"ix":14,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.398,-0.687],[1.028,-1.633],[1.448,-1.592],[5.415,-2.435],[7.582,1.315],[2.936,1.103],[0.677,0.361],[0.221,0.124],[0,0],[0.226,0.127],[0,0],[2.272,3.304],[0.903,1.577],[-1.862,-3.37],[-15.434,2.69],[-0.19,0.03],[-3.717,2.06],[-0.46,0.28],[-2.641,3.127],[-0.167,0.207],[-0.525,7.701]],"o":[[-0.809,1.75],[-1.083,1.853],[-3.856,4.519],[-7.735,3.478],[-3.008,-0.427],[-0.677,-0.362],[-0.225,-0.115],[0,0],[-0.232,-0.118],[0,0],[-3.495,-2.296],[-1.147,-1.375],[0.669,3.765],[7.864,14.191],[0.171,-0.035],[3.96,-0.751],[0.473,-0.256],[3.67,-2.223],[0.167,-0.208],[4.988,-6.144],[-0.314,0.718]],"v":[[9.357,-39.369],[6.602,-34.286],[2.802,-29.121],[-11.226,-18.447],[-34.581,-15.451],[-43.499,-17.726],[-45.531,-18.81],[-46.201,-19.168],[-50.238,-21.323],[-50.925,-21.69],[-52.842,-22.714],[-61.489,-31.117],[-64.548,-35.559],[-60.775,-24.764],[-21.516,-6.325],[-20.965,-6.418],[-9.377,-10.62],[-7.99,-11.418],[1.509,-19.526],[2.01,-20.149],[10.42,-41.478]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","np":2,"cix":2,"bm":0,"ix":15,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.309,-4.178],[-15.434,2.69],[-0.19,0.03],[-3.717,2.059],[-0.459,0.28],[-2.641,3.127],[-0.167,0.208],[4.712,12.504],[0.877,1.58],[17.203,-9.517],[3.233,-4.2],[-1.008,-9.606]],"o":[[7.864,14.192],[0.171,-0.035],[3.96,-0.751],[0.473,-0.256],[3.67,-2.223],[0.167,-0.208],[8.317,-10.245],[-0.621,-1.632],[-9.641,-17.418],[-4.645,2.577],[-5.863,7.623],[0.486,4.718]],"v":[[-60.775,-24.764],[-21.516,-6.325],[-20.965,-6.419],[-9.377,-10.62],[-7.99,-11.418],[1.509,-19.526],[2.011,-20.149],[8.196,-56.861],[5.961,-61.686],[-45.449,-75.823],[-57.435,-65.536],[-64.941,-38.282]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 16","np":2,"cix":2,"bm":0,"ix":16,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":16,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-3.403,-13.329],"ix":2},"a":{"a":0,"k":[-3.403,-13.329],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":12,"s":[-3]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":15.667,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":19.333,"s":[-3]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":23,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":26.667,"s":[-3]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":30.333,"s":[0]},{"t":34,"s":[-3]}],"ix":6,"x":"var $bm_rt;\\nvar fx = effect(\'ŝlosilo pli pura 3\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7,"x":"var $bm_rt;\\nvar fx = effect(\'ŝlosilo pli pura 3\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5,"x":"var $bm_rt;\\nvar fx = effect(\'ŝlosilo pli pura 3\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-7.357,5.338]],"o":[[0.984,-9.036],[0,0]],"v":[[10.589,-102.093],[23.881,-125]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.593,"s":[0]},{"t":44,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":12,"s":[0]},{"t":28.5927734375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.992156863213,0.772549033165,0.156862750649,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":12,"s":[0,0],"to":[0.003,-3.333],"ti":[-0.003,3.333]},{"t":44,"s":[0.018,-20]}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[8.397,-0.154]],"o":[[-5.222,-6.578],[0,0]],"v":[[-82.611,-71.914],[-104.607,-82.288]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.593,"s":[0]},{"t":44,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":12,"s":[0]},{"t":28.5927734375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.298039227724,0.694117665291,0.96862745285,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":12,"s":[0,0],"to":[-3.332,-1.67],"ti":[3.332,1.67]},{"t":44,"s":[-19.991,-10.018]}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-9.949,2.047]],"o":[[8.115,-6.109],[0,0]],"v":[[77.061,-41.014],[104.607,-53.45]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.593,"s":[0]},{"t":44,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":12,"s":[0]},{"t":28.5927734375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.298039227724,0.694117665291,0.96862745285,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":12,"s":[0,0],"to":[5.001,-1.662],"ti":[-5.001,1.662]},{"t":44,"s":[30.009,-9.974]}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[2.209,1.022],[2.372,-0.547],[0.71,-2.328],[-2.212,-1.016],[-0.427,2.396],[2.133,1.296],[6.473,-2.615]],"o":[[-1.854,-1.577],[-2.209,-1.022],[-2.372,0.547],[-0.71,2.328],[2.212,1.016],[0.438,-2.457],[-5.965,-3.626],[0,0]],"v":[[-69.415,28.878],[-75.417,24.759],[-82.52,23.788],[-87.772,28.373],[-85.237,34.564],[-79.531,31.824],[-83.339,25.915],[-103.469,24.279]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.593,"s":[0]},{"t":44,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":12,"s":[0]},{"t":28.5927734375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.549019634724,0.443137258291,0.870588243008,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":12,"s":[0,0],"to":[-5.001,1.662],"ti":[5.001,-1.662]},{"t":44,"s":[-30.009,9.974]}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":3,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-2,2.553],[-3.24,-0.144],[-1.079,-1.933],[2.097,-0.709],[0.866,1.711],[-0.266,1.899],[-4.873,4.52]],"o":[[-0.915,-3.111],[2,-2.553],[2.211,0.099],[1.079,1.933],[-1.816,0.614],[-0.866,-1.711],[0.92,-6.582],[0,0]],"v":[[62.812,-76.714],[64.574,-85.914],[73.085,-89.826],[78.69,-86.831],[76.953,-81.277],[72.225,-83.613],[71.682,-89.249],[80.727,-106.583]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":28.593,"s":[0]},{"t":44,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":12,"s":[0]},{"t":28.5927734375,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.298039227724,0.694117665291,0.96862745285,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":12,"s":[0,0],"to":[1.67,-3.332],"ti":[-1.67,3.332]},{"t":44,"s":[10.018,-19.991]}],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":3,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":5,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.385,-2.552]],"o":[[1.78,1.868],[0,0]],"v":[[14.816,-93.05],[18.11,-86.326]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.392,-2.02]],"o":[[1.631,1.256],[0,0]],"v":[[8.328,-90.475],[11.472,-85.382]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[2.759,15.99],[-2.991,2.72],[-3.376,-2.583],[-1.34,-7.426],[0.663,-7.517],[6.999,-6.415]],"o":[[6.651,-15.582],[-0.687,-3.984],[3.145,-2.86],[5.993,4.585],[1.34,7.426],[-0.834,9.457],[0,0]],"v":[[4.52,-32.441],[7.652,-80.107],[9.281,-91.578],[20.946,-90.378],[31.715,-71.052],[31.846,-48.485],[22.571,-22.281]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.536,-6.522],[3.435,8.183],[3.347,1.68],[2.535,-1.409],[0.767,-1.236],[0.369,-0.813],[-2.91,2.634],[-3.383,-2.589],[-1.342,-7.428]],"o":[[-0.047,-8.887],[-1.446,-3.461],[-2.62,-1.283],[-1.259,0.703],[-0.361,0.579],[-0.656,-3.895],[3.151,-2.859],[5.999,4.588],[1.153,6.43]],"v":[[32.097,-51.51],[26.799,-77.454],[20.046,-86.157],[11.632,-85.898],[8.528,-82.937],[7.586,-80.464],[9.28,-91.578],[20.944,-90.378],[31.722,-71.057]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.536,-6.522],[0.097,-0.995],[6.989,-6.425],[0,0],[2.764,15.991],[0.015,0.124],[-2.91,2.634],[-3.383,-2.589],[-1.342,-7.428]],"o":[[-0.078,1.011],[-0.834,9.456],[0,0],[4.733,-15.534],[-0.015,-0.124],[-0.656,-3.895],[3.151,-2.859],[5.999,4.588],[1.153,6.43]],"v":[[32.097,-51.51],[31.845,-48.492],[22.576,-22.278],[4.839,-32.638],[7.645,-80.113],[7.586,-80.464],[9.28,-91.578],[20.944,-90.378],[31.722,-71.057]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[23,-23],"ix":2},"a":{"a":0,"k":[23,-23],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":8.25,"s":[-10]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":16.5,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":24.75,"s":[-10]},{"t":33,"s":[0]}],"ix":6,"x":"var $bm_rt;\\nvar fx = effect(\'ŝlosilo pli pura\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-2.195,-1.509]],"o":[[2.62,-0.481],[0,0]],"v":[[-75.74,-10.314],[-68.251,-8.665]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.985,-1.047]],"o":[[2.237,-0.178],[0,0]],"v":[[-76.759,-4.962],[-70.277,-3.628]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[15.439,4.995],[3.116,-2.576],[-2.079,-3.708],[-7.162,-2.378],[-7.535,-0.408],[-7.341,6.02]],"o":[[-16.366,4.378],[-3.847,-1.245],[-3.277,2.708],[3.69,6.582],[7.162,2.378],[9.48,0.513],[0,0]],"v":[[-15.383,-7.923],[-63.011,-11.572],[-74.598,-11.584],[-75.061,0.134],[-57.455,13.53],[-35.134,16.856],[-7.88,11.385]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.78,-0.695],[4.25,0.232],[7.153,2.394],[3.693,6.578],[-3.278,2.695],[-2.312,-0.335],[0.709,-1.426],[-2.078,-3.208],[-3.335,-1.879],[-11.001,0.779],[-1.46,-0.239]],"o":[[-4.257,0.467],[-7.528,-0.418],[-7.168,-2.374],[-2.084,-3.708],[1.76,-1.46],[-1.135,0.689],[-1.672,3.418],[2.078,3.208],[9.572,5.454],[1.491,-0.104],[1.039,0.164]],"v":[[-22.234,16.754],[-35.139,16.864],[-57.451,13.521],[-75.061,0.141],[-74.601,-11.578],[-68.282,-12.915],[-71.11,-10.04],[-69.948,0.862],[-61.344,8.273],[-29.556,15.507],[-25.104,15.482]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.866666674614,0.89411765337,0.933333337307,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[5.284,-0.552],[4.25,0.232],[7.153,2.394],[3.693,6.578],[-3.278,2.695],[-2.312,-0.335],[-1.673,-0.536],[-16.024,2.482]],"o":[[-4.063,3.324],[-4.257,0.467],[-7.528,-0.418],[-7.168,-2.374],[-2.084,-3.708],[1.76,-1.46],[1.781,0.237],[15.44,4.994],[0,0]],"v":[[-7.874,11.391],[-22.234,16.754],[-35.139,16.864],[-57.451,13.521],[-75.061,0.141],[-74.601,-11.578],[-68.282,-12.915],[-63.006,-11.569],[-15.629,-7.625]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-8.5,11.5],"ix":2},"a":{"a":0,"k":[-8.5,11.5],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":8.25,"s":[10]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":16.5,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":24.75,"s":[10]},{"t":33,"s":[0]}],"ix":6,"x":"var $bm_rt;\\nvar fx = effect(\'ŝlosilo pli pura\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":5,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.382,-1.269]],"o":[[-1.119,0.711],[0,0]],"v":[[91.922,25.089],[89.572,28.191]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.522,-1.762]],"o":[[-1.602,0.9],[0,0]],"v":[[88.563,23.058],[85.209,27.262]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[2.86,-3.122]],"o":[[-4.125,0.961],[0,0]],"v":[[49.069,7.654],[38.243,13.914]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.439,-1.107],[-3.847,-4.938],[-0.091,-0.119],[-0.082,-0.124],[-2.123,-4.338],[-0.596,-1.428],[-0.883,0.095],[-0.874,-0.019],[-1.446,-0.366],[-0.357,-0.116],[-0.261,-0.096],[-0.519,-0.231],[-0.253,-0.125],[-1.906,-2.308],[-0.27,-0.371],[-0.54,-0.766],[-0.284,-0.375],[-0.62,-0.648],[-0.552,-0.419],[-0.196,-0.133],[-2.241,0.664],[-1.266,0.019],[-0.267,-0.02],[-0.206,-0.042],[-0.265,-0.082],[-0.228,-0.103],[-0.127,-0.074],[-0.103,-0.076],[-0.089,-0.072],[-0.149,-0.135],[-0.09,-0.095],[-0.211,-0.441],[-0.049,-0.13],[-0.028,-0.094],[-0.028,-0.094],[0.16,-1.014],[0.102,-0.446],[0.154,-0.548],[0.183,-0.54],[0.828,-1.511],[0.202,-0.333],[0.04,-0.059],[3.036,-1.282],[0.491,-0.143],[0.987,-0.105],[0.331,-0.016],[1.064,0.119],[4.884,1.98],[5.563,-0.534],[7.969,-1.346],[8.565,4.727],[6.205,9.325],[0.216,0.341],[0.303,0.474],[1.014,2.409],[0.264,0.751],[0.234,0.914],[0.182,1.88],[0.013,0.953],[-0.041,0.619],[-0.018,0.314],[-0.098,0.626],[-0.132,0.609],[-0.07,0.307],[-0.09,0.294],[-0.509,1.149]],"o":[[1.473,1.104],[4.955,3.816],[0.091,0.119],[0.1,0.114],[2.939,3.843],[0.684,1.39],[0.859,-0.203],[0.859,-0.094],[1.492,0.037],[0.365,0.087],[0.274,0.077],[0.54,0.183],[0.257,0.111],[2.692,1.307],[0.287,0.337],[0.534,0.733],[0.26,0.376],[0.534,0.733],[0.485,0.517],[0.182,0.129],[2.632,1.718],[1.02,-0.306],[0.266,-0.003],[0.219,0.023],[0.268,0.044],[0.245,0.069],[0.14,0.055],[0.131,0.06],[0.102,0.052],[0.162,0.115],[0.099,0.09],[0.339,0.344],[0.058,0.125],[0.038,0.088],[0.033,0.103],[0.246,0.956],[-0.069,0.44],[-0.126,0.533],[-0.159,0.539],[-0.542,1.63],[-0.173,0.341],[-0.04,0.059],[-1.739,2.789],[-0.465,0.189],[-0.955,0.269],[-0.335,0.031],[-1.065,0.052],[-5.353,-0.555],[-5.175,-2.098],[-8.045,0.771],[-9.647,1.629],[-10.204,-5.631],[-0.225,-0.335],[-0.312,-0.469],[-1.475,-2.125],[-0.316,-0.734],[-0.319,-0.891],[-0.497,-1.836],[-0.097,-0.93],[-0.006,-0.617],[0.009,-0.309],[0.046,-0.61],[0.084,-0.607],[0.061,-0.302],[0.08,-0.312],[0.336,-1.198],[0,0]],"v":[[21.358,-26.146],[25.722,-22.815],[38.993,-9.595],[39.266,-9.238],[39.54,-8.881],[47.157,3.433],[49.071,7.658],[51.678,7.213],[54.283,7.11],[58.711,7.72],[59.794,8.024],[60.599,8.288],[62.171,8.9],[62.928,9.252],[69.952,14.738],[70.782,15.803],[72.382,18.065],[73.192,19.202],[74.908,21.302],[76.457,22.716],[77.017,23.107],[83.788,23.385],[87.17,22.784],[87.979,22.816],[88.614,22.908],[89.416,23.102],[90.122,23.361],[90.534,23.555],[90.89,23.756],[91.189,23.941],[91.662,24.307],[91.946,24.573],[92.776,25.747],[92.937,26.119],[93.04,26.389],[93.13,26.679],[93.186,29.675],[92.923,31.003],[92.499,32.627],[91.989,34.251],[89.933,39.006],[89.365,40.007],[89.241,40.198],[82.15,46.593],[80.717,47.094],[77.798,47.654],[76.805,47.726],[73.615,47.61],[60.116,41.913],[43.7,39.472],[20.157,45.13],[-8.237,40.3],[-30.263,15.9],[-30.929,14.889],[-31.843,13.481],[-35.606,6.636],[-36.469,4.41],[-37.303,1.694],[-38.33,-3.894],[-38.49,-6.709],[-38.452,-8.567],[-38.399,-9.509],[-38.19,-11.365],[-37.866,-13.189],[-37.664,-14.105],[-37.418,-15.009],[-36.152,-18.53]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.439,-1.107],[-3.847,-4.938],[-0.091,-0.119],[-0.082,-0.124],[-2.123,-4.338],[-0.596,-1.428],[-0.883,0.095],[-0.874,-0.019],[-1.446,-0.366],[-0.357,-0.116],[-0.261,-0.096],[-0.519,-0.231],[-0.253,-0.125],[-1.906,-2.308],[-0.27,-0.371],[-0.54,-0.766],[-0.284,-0.375],[-0.62,-0.648],[-0.552,-0.419],[-0.196,-0.133],[-2.241,0.664],[-1.266,0.019],[-0.267,-0.02],[-0.206,-0.042],[-0.265,-0.082],[-0.228,-0.103],[-0.127,-0.074],[-0.103,-0.076],[-0.089,-0.072],[-0.149,-0.135],[-0.09,-0.095],[-0.211,-0.441],[-0.049,-0.13],[-0.028,-0.094],[-0.028,-0.094],[0.16,-1.014],[0.102,-0.446],[0.154,-0.548],[0.183,-0.54],[0.828,-1.511],[0.202,-0.333],[0.04,-0.059],[3.036,-1.282],[0.491,-0.143],[0.987,-0.105],[0.331,-0.016],[1.064,0.119],[4.884,1.98],[5.563,-0.534],[7.969,-1.346],[8.565,4.727],[6.205,9.325],[0.216,0.341],[0.303,0.474],[1.014,2.409],[0.264,0.751],[0.234,0.914],[0.182,1.88],[0.013,0.953],[-0.041,0.619],[-0.018,0.314],[-0.098,0.626],[-0.132,0.609],[-0.07,0.307],[-0.09,0.294],[-0.509,1.149]],"o":[[1.473,1.104],[4.955,3.816],[0.091,0.119],[0.1,0.114],[2.939,3.843],[0.684,1.39],[0.859,-0.203],[0.859,-0.094],[1.492,0.037],[0.365,0.087],[0.274,0.077],[0.54,0.183],[0.257,0.111],[2.692,1.307],[0.287,0.337],[0.534,0.733],[0.26,0.376],[0.534,0.733],[0.485,0.517],[0.182,0.129],[2.632,1.718],[1.02,-0.306],[0.266,-0.003],[0.219,0.023],[0.268,0.044],[0.245,0.069],[0.14,0.055],[0.131,0.06],[0.102,0.052],[0.162,0.115],[0.099,0.09],[0.339,0.344],[0.058,0.125],[0.038,0.088],[0.033,0.103],[0.246,0.956],[-0.069,0.44],[-0.126,0.533],[-0.159,0.539],[-0.542,1.63],[-0.173,0.341],[-0.04,0.059],[-1.739,2.789],[-0.465,0.189],[-0.955,0.269],[-0.335,0.031],[-1.065,0.052],[-5.353,-0.555],[-5.175,-2.098],[-8.045,0.771],[-9.647,1.629],[-10.204,-5.631],[-0.225,-0.335],[-0.312,-0.469],[-1.475,-2.125],[-0.316,-0.734],[-0.319,-0.891],[-0.497,-1.836],[-0.097,-0.93],[-0.006,-0.617],[0.009,-0.309],[0.046,-0.61],[0.084,-0.607],[0.061,-0.302],[0.08,-0.312],[0.336,-1.198],[0,0]],"v":[[4.443,-35.992],[25.722,-22.815],[38.993,-9.595],[39.266,-9.238],[39.54,-8.881],[47.157,3.433],[49.071,7.658],[51.678,7.213],[54.283,7.11],[58.711,7.72],[59.794,8.024],[60.599,8.288],[62.171,8.9],[62.928,9.252],[69.952,14.738],[70.782,15.803],[72.382,18.065],[73.192,19.202],[74.908,21.302],[76.457,22.716],[77.017,23.107],[83.788,23.385],[87.17,22.784],[87.979,22.816],[88.614,22.908],[89.416,23.102],[90.122,23.361],[90.534,23.555],[90.89,23.756],[91.189,23.941],[91.662,24.307],[91.946,24.573],[92.776,25.747],[92.937,26.119],[93.04,26.389],[93.13,26.679],[93.186,29.675],[92.923,31.003],[92.499,32.627],[91.989,34.251],[89.933,39.006],[89.365,40.007],[89.241,40.198],[82.15,46.593],[80.717,47.094],[77.798,47.654],[76.805,47.726],[73.615,47.61],[60.116,41.913],[43.7,39.472],[20.157,45.13],[-8.237,40.3],[-30.263,15.9],[-30.929,14.889],[-31.843,13.481],[-35.606,6.636],[-36.469,4.41],[-37.303,1.694],[-38.33,-3.894],[-38.49,-6.709],[-38.452,-8.567],[-38.399,-9.509],[-38.19,-11.365],[-37.866,-13.189],[-37.664,-14.105],[-37.418,-15.009],[-36.152,-18.53]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":5,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.299,-1.927]],"o":[[-1.715,0.927],[0,0]],"v":[[85.452,-24.214],[82.196,-19.603]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.981,-1.672]],"o":[[-1.897,0.4],[0,0]],"v":[[90.429,-20.866],[85.844,-17.565]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-10.315,-1.088],[-4.18,2.449],[-3.53,0.9],[1.504,-5.616],[3.009,-0.701],[2.803,0.613],[3.244,-2.292],[3.199,-2.354],[3.923,0.622],[0.124,0.313]],"o":[[3.343,-9.819],[4.817,0.508],[3.143,-1.841],[11.364,-2.896],[-0.799,2.984],[-2.794,0.651],[-3.881,-0.849],[-3.244,2.292],[-3.199,2.354],[-0.124,-0.313],[0,0]],"v":[[36.426,-1.483],[60.703,-17.003],[74.929,-17.005],[83.363,-23.758],[90.828,-0.488],[85.432,6.472],[77.137,4.644],[65.979,7.711],[56.81,15.314],[45.749,18.819],[45.379,17.881]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-10.315,-1.088],[-4.18,2.449],[-3.53,0.9],[1.504,-5.616],[3.009,-0.701],[2.803,0.613],[3.244,-2.292],[3.199,-2.354],[3.923,0.622],[0.124,0.313]],"o":[[3.343,-9.819],[4.817,0.508],[3.143,-1.841],[11.364,-2.896],[-0.799,2.984],[-2.794,0.651],[-3.881,-0.849],[-3.244,2.292],[-3.199,2.354],[-0.124,-0.313],[0,0]],"v":[[36.426,-1.483],[60.703,-17.003],[74.929,-17.005],[83.363,-23.758],[90.828,-0.488],[85.432,6.472],[77.137,4.644],[65.979,7.711],[56.81,15.314],[45.749,18.819],[45.379,17.881]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[36,-2.5],"ix":2},"a":{"a":0,"k":[36,-2.5],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":7,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":15.25,"s":[10]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":23.5,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":31.75,"s":[10]},{"t":40,"s":[0]}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[2,45.373],"ix":2},"a":{"a":0,"k":[2,45.373],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":8.25,"s":[-10]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":16.5,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":24.75,"s":[-10]},{"t":33,"s":[0]}],"ix":6,"x":"var $bm_rt;\\nvar fx = effect(\'ŝlosilo pli pura\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.822,-6.046]],"o":[[-2.367,5.623],[0,0]],"v":[[-55.857,47.954],[-58.232,65.885]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":0,"k":100,"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0]},"t":4,"s":[100]},{"t":17.962890625,"s":[0]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0]},"t":17.963,"s":[100]},{"t":33,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":3,"nm":"Trim Paths 2","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.662745118141,0.72549021244,0.78823530674,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-2.406,-13]],"o":[[-7.778,10.69],[0,0]],"v":[[-43.444,41.138],[-51.977,78.764]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":0,"k":100,"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0]},"t":4,"s":[100]},{"t":17.962890625,"s":[0]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0]},"t":17.963,"s":[100]},{"t":33,"s":[0]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":3,"nm":"Trim Paths 2","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.662745118141,0.72549021244,0.78823530674,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[2.357,-4.821]],"o":[[0.516,5.341],[0,0]],"v":[[74.593,70.286],[71.759,85.927]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":0,"k":100,"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":17.963,"s":[0]},{"t":33,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":4,"s":[0]},{"t":17.962890625,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":3,"nm":"Trim Paths 2","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.662745118141,0.72549021244,0.78823530674,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[9.483,-12.146]],"o":[[4.468,14.747],[0,0]],"v":[[65.356,58.049],[57.201,101.779]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":0,"k":100,"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":17.963,"s":[0]},{"t":33,"s":[100]}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":4,"s":[0]},{"t":17.962890625,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":3,"nm":"Trim Paths 2","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.662745118141,0.72549021244,0.78823530674,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[8.093,71.459],"ix":2},"a":{"a":0,"k":[8.093,71.459],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.626,4.143]],"o":[[-1.373,-3.962],[0,0]],"v":[[-28.805,87.147],[-31.828,74.959]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[3.709,0.337]],"o":[[-3.685,-0.59],[0,0]],"v":[[-21.783,73.646],[-32.876,72.274]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-11.875],[7.106,-8.852],[16.319,0],[1.253,0.096],[5.395,21.185],[0,4.42],[-2.132,5.661],[-13.501,5.359],[-6.732,0],[-9.466,-12.272],[0,0]],"o":[[0,12.236],[-9.478,11.815],[-1.277,0],[-22.449,-1.614],[-1.048,-4.095],[0,-6.407],[5.118,-13.621],[5.901,-2.349],[16.68,0],[0,0],[6.72,8.719]],"v":[[58.27,73.297],[46.925,105.622],[6.567,125],[2.785,124.855],[-43.534,86.099],[-45.136,73.297],[-41.836,55.087],[-12.51,25.219],[6.567,21.582],[47.551,41.755],[47.551,41.767]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.361,-4.42],[0.096,-0.614],[3.396,-2.264],[1.542,0.132],[1.59,3.143],[-0.397,4.974],[-1.638,2.878],[-3.252,-0.265],[-0.12,-0.024],[-1.518,-3.649]],"o":[[-0.048,0.638],[-0.891,6.19],[-1.397,0.927],[-2.758,-0.229],[-1.698,-3.348],[0.337,-4.119],[2.204,-3.866],[0.12,0.012],[2.915,0.421],[1.337,3.203]],"v":[[-21.567,71.756],[-21.783,73.647],[-28.805,87.147],[-33.261,88.412],[-39.957,82.992],[-42.101,70.082],[-38.982,59.375],[-30.407,53.425],[-30.033,53.474],[-23.169,60.025]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.626,4.143]],"o":[[-1.373,-3.962],[0,0]],"v":[[-28.805,87.147],[-31.828,74.959]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[3.709,0.337]],"o":[[-3.685,-0.59],[0,0]],"v":[[-21.783,73.646],[-32.876,72.274]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.164705887437,0.192156866193,0.203921571374,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.429,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-7.238,-4.035],[5.395,21.185],[-1.072,1.12],[-2.758,-0.229],[-1.397,0.927],[-5.468,-6.48]],"o":[[-22.449,-1.614],[1.289,-0.951],[1.59,3.143],[1.542,0.132],[2.77,8.009],[5.347,6.335]],"v":[[2.785,124.855],[-43.534,86.099],[-39.957,82.992],[-33.261,88.412],[-28.805,87.147],[-16.328,109.139]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.992156863213,0.772549033165,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.698,-3.348],[1.289,-0.951],[0,4.42],[-2.132,5.661],[-0.831,-1.505],[0.337,-4.119]],"o":[[-1.072,1.12],[-1.048,-4.095],[0,-6.407],[1.06,1.337],[-1.638,2.878],[-0.397,4.974]],"v":[[-39.957,82.992],[-43.534,86.099],[-45.136,73.297],[-41.836,55.087],[-38.982,59.375],[-42.101,70.082]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235294819,0.364705890417,0.349019616842,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":2,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-13.501,5.359],[2.698,-3.794],[1.53,-6.576],[0.12,0.012],[2.204,-3.866],[1.06,1.337]],"o":[[-3.697,2.818],[-3.938,5.516],[-0.12,-0.024],[-3.252,-0.265],[-0.831,-1.505],[5.118,-13.621]],"v":[[-12.51,25.219],[-22.265,35.095],[-30.033,53.474],[-30.407,53.425],[-38.982,59.375],[-41.836,55.087]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.992156863213,0.772549033165,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":2,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-9.466,-12.272],[11.694,-2.746],[9.972,-8.719],[2.915,0.421],[-3.938,5.516],[-3.697,2.818],[-6.732,0]],"o":[[-11.742,-2.529],[-12.899,3.023],[-1.518,-3.649],[1.53,-6.576],[2.698,-3.794],[5.901,-2.349],[16.68,0]],"v":[[47.551,41.755],[11.806,42.008],[-23.169,60.025],[-30.033,53.474],[-22.265,35.095],[-12.51,25.219],[6.567,21.582]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235294819,0.364705890417,0.349019616842,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":2,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-11.875],[7.106,-8.852],[10.851,5.167],[13.489,2.108],[-0.048,0.638],[1.337,3.203],[-12.899,3.023],[-11.742,-2.529],[0,0]],"o":[[0,12.236],[-8.707,-8.274],[-12.309,-5.841],[0.096,-0.614],[0.361,-4.42],[9.972,-8.719],[11.694,-2.746],[0,0],[6.72,8.719]],"v":[[58.27,73.297],[46.925,105.622],[17.226,85.413],[-21.783,73.647],[-21.567,71.756],[-23.169,60.025],[11.806,42.008],[47.551,41.755],[47.551,41.767]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.992156863213,0.772549033165,0.156862750649,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":2,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.707,-8.274],[16.319,0],[1.253,0.096],[5.347,6.335],[2.77,8.009],[-0.891,6.19],[-12.309,-5.841]],"o":[[-9.478,11.815],[-1.277,0],[-7.238,-4.035],[-5.468,-6.48],[3.396,-2.264],[13.489,2.108],[10.851,5.167]],"v":[[46.925,105.622],[6.567,125],[2.785,124.855],[-16.328,109.139],[-28.805,87.147],[-21.783,73.647],[17.226,85.413]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235294819,0.364705890417,0.349019616842,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":2,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":12,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[7,124],"ix":2},"a":{"a":0,"k":[7,124],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":9.081,"s":[3]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":18.919,"s":[-3]},{"t":28,"s":[0]}],"ix":6,"x":"var $bm_rt;\\nvar fx = effect(\'ŝlosilo pli pura 2\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":120,"st":0,"bm":0}],"markers":[]}');var M=i(61769);let z=["places"],W=function(n){let{onCoordinatesChange:e}=n,{isLoaded:i,loadError:t}=(0,M.RH)({googleMapsApiKey:"AIzaSyAEDUZ5j5qD_KarctvQKL_U9RZeqVNTaIk",libraries:z}),[r,o]=(0,d.useState)(null);return i?t?(0,a.jsx)("p",{children:"Well this is embarrassing. The site couldn't load Google Maps API.\n        Please contact Ali: ali@hiring.cafe"}):(0,a.jsx)(M.jT,{onLoad:n=>{o(n)},onPlaceChanged:()=>{if(r){var n;let i=r.getPlace();if(i.geometry)e({lat:i.geometry.location.lat(),lng:i.geometry.location.lng(),country:(null===(n=i.address_components.find(n=>n.types.includes("country")))||void 0===n?void 0:n.short_name)||"",formatted_address:i.formatted_address})}},types:["(cities)"],children:(0,a.jsx)("input",{type:"text",placeholder:"Search city...",className:"w-full p-2 border rounded my-2 outline-none z-50"})}):(0,a.jsx)("p",{children:"Loading..."})};var F=i(22457),R=i(86715),N=i(6147),L=i(46005);let C=Object.keys(G.r4).map(n=>({value:n,label:G.r4[n],type:"country"})),q=Object.keys(G.ij).map(n=>({value:n,label:n,type:"region"})),Q=n=>{let{selectedRegionDropdown:e,setSelectedRegionDropdown:i,onCountriesChange:t}=n;return(0,a.jsx)(L.Ay,{isMulti:!0,options:(()=>{let n=e.filter(n=>"region"===n.type).flatMap(n=>G.ij[n.value]).filter(Boolean);return[...q,...C.filter(e=>!n.includes(e.value))]})(),styles:{multiValue:n=>({...n,backgroundColor:"lightgray"}),multiValueLabel:n=>({...n,fontWeight:"bold"}),multiValueRemove:n=>({...n,cursor:"pointer"})},onChange:n=>{i(n);let e=n.filter(n=>"country"===n.type).map(n=>n.value);n.filter(n=>"region"===n.type).forEach(n=>{e=e.concat(G.ij[n.value])}),t([...new Set(e)])},value:e,filterOption:(n,e)=>"region"===n.type?n.label.toLowerCase().includes(e.toLowerCase()):n.label.toLowerCase().includes(e.toLowerCase())||G.ij[n.label]&&G.ij[n.label].some(n=>G.r4[n]&&G.r4[n].toLowerCase().includes(e.toLowerCase()))})};var H=i(20480),Y=i(9389),U=i(81829);let J=n=>{let{companyDomains:e,setCompanyDomains:i}=n,[t,r]=(0,d.useState)(""),o=n=>{i(e.filter((e,i)=>i!==n))};return(0,a.jsxs)("div",{className:"",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-2 mb-4",children:[(0,a.jsx)("input",{type:"text",className:"p-2 border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-gray-500 w-full",value:t,onChange:n=>r(n.target.value),placeholder:"Email domain name (e.g. meta.com)"}),(0,a.jsx)("button",{disabled:!t,className:"p-2 rounded bg-black text-white disabled:text-black focus:outline-none focus:ring-1 focus:ring-gray-500 focus:ring-offset-2 focus:ring-offset-gray-100 disabled:bg-gray-100 disabled:cursor-not-allowed",onClick:()=>{t&&(i([...e,t]),r(""))},children:(0,a.jsx)(Y.A,{className:"h-5 w-5"})})]}),(0,a.jsx)("ul",{children:e.map((n,e)=>(0,a.jsxs)("li",{className:"flex items-center justify-between p-2 border-b border-gray-300",children:[(0,a.jsxs)("div",{className:"flex items-center",children:[(0,a.jsx)("span",{className:"text-gray-400 font-light",children:"*@"}),(0,a.jsx)("span",{className:"font-medium mr-1",children:n}),(0,a.jsxs)(f.A,{isLazy:!0,closeOnBlur:!0,closeOnEsc:!0,wid:!0,children:[(0,a.jsx)(y.W,{children:(0,a.jsx)("button",{children:(0,a.jsx)(H.A,{className:"h-5 w-5 text-gray-500"})})}),(0,a.jsx)(v.h,{children:(0,a.jsx)(k.e,{children:(0,a.jsx)("span",{children:"Your profile will be hidden from emails ending with ".concat(n,". For example: lisa@").concat(n)})})})]})]}),(0,a.jsx)("button",{onClick:()=>o(e),children:(0,a.jsx)(U.A,{className:"h-5 w-5 text-red-500"})})]},e))})]})};var X=i(55476);let Z=()=>{let n=(0,R.useRouter)(),{user:e,loading:i,userData:t}=(0,s.A)(),{seekerUserData:r,loading:l}=(0,F.A)(),E=(0,h.d)(),[M,z]=(0,d.useState)(!1),[L,C]=(0,d.useState)(""),[q,Y]=(0,d.useState)(""),[U,Z]=(0,d.useState)(""),[nn,ne]=(0,d.useState)([]),[ni,na]=(0,d.useState)(null),[nt,nr]=(0,d.useState)(null),[no,ns]=(0,d.useState)(!1),[nl,nm]=(0,d.useState)([]),[nu,nd]=(0,d.useState)(""),[nx,nh]=(0,d.useState)(!1),[np,nc]=(0,d.useState)([]),[nf,ny]=(0,d.useState)(null),[nv,nb]=(0,d.useState)([]),{isOpen:nk,onOpen:ng,onClose:n_}=(0,p.j)(),{isOpen:n$,onOpen:nT,onClose:nV}=(0,p.j)(),{isOpen:nD,onOpen:nK,onClose:nS}=(0,p.j)();(0,d.useEffect)(()=>{if(r){var n;C(r.linkedin),Y(r.website),Z(r.min_salary),na(r.resume),nm(r.skills),ny(r.current_location||null),r.current_location?nh(!1):nh(!0),ne(r.locations),nb(r.hidden_companies||[]),(null===(n=r.locations)||void 0===n?void 0:n.length)?nc(r.locations.map(n=>{if(G.r4[n])return{value:n,label:G.r4[n],type:"country"}}).filter(Boolean)):nc([])}else C(""),Y(""),ny(null),ne([]),nc([]),Z(""),na(null),nm([]),nh(!0)},[r]);let nP=async()=>{if(!e){n.push({pathname:"/auth",query:{redirect:n.asPath}});return}let i=(0,u.H9)(x.T6,"seeker_profiles/".concat(e.uid));(0,u.BN)((0,u.H9)(x.T6,"users/".concat(e.uid)),{seeker:!0},{merge:!0}),(0,u.BN)(i,{id:e.uid,active:!1,name:(null==t?void 0:t.name)||"",linkedin:(null==t?void 0:t.linkedin)||"",website:"",locations:[],skills:[],min_salary:"",resume:null,resume_is_pdf:null,resume_path:null,resume_gpt:!1,resume_summary:{jobs:[],education:[]},created_at:u.Dc.now(),current_location:null,hidden_companies:[]})},nA=async(n,i)=>{if(e&&r){let a=(0,u.H9)(x.T6,"seeker_profiles/".concat(e.uid));await (0,u.BN)(a,{[n]:i},{merge:!0}),["skills, locations"].includes(n)&&nI(n)}},nG=async()=>{z(!0);try{let n=await e.getIdToken();await w.A.post("/api/marketplaceFunctions/resumeDeleteSeekerPool",{token:n}),na(null),nr(null),nI("resume")}catch(n){console.log(n)}z(!1)},nw=async()=>{if(!M&&nt&&e){z(!0);try{let n=await e.getIdToken(),i=new FormData;i.append("resume",nt),await w.A.post("/api/marketplaceFunctions/resumeUploadSeekerPool",i,{headers:{"Content-Type":"multipart/form-data",token:n,resume_is_pdf:no},withCredentials:!0}),na(null),nr(null)}catch(n){console.log(n)}z(!1)}},nE=async()=>{if(e&&r){if(m().isEqual(r.current_location,nf)||await nA("current_location",nf),nt){if(!r.current_location&&!nf){E({title:"Unable to go live",description:"Add missing information to go live.",status:"error",duration:3e3,isClosable:!0,position:"top-right"});return}await nw()}r.linkedin!==L&&nA("linkedin",L),r.website!==q&&nA("website",q),r.min_salary!==U&&nA("min_salary",U),m().isEqual(r.locations,nn)||nA("locations",nn),m().isEqual(r.hidden_companies,nv)||nA("hidden_companies",nv),nt&&(r.current_location||nf)&&X.Ay.capture("activate_talent_profile_v5",{resume:nt,current_location:r.current_location||nf}),E({title:"Successfully updated profile",status:"success",duration:3e3,isClosable:!0,position:"top-right"})}},nB=()=>!!(M||!r||!nt&&r.linkedin===L&&r.website===q&&r.min_salary===U&&m().isEqual(r.locations,nn)&&m().isEqual(r.current_location,nf)&&m().isEqual(r.hidden_companies||[],nv)),nI=n=>{let e=n.replace("_"," ");E({title:"Success",description:"".concat(e.charAt(0).toUpperCase()+e.slice(1)," updated successfully."),status:"success",duration:3e3,isClosable:!0,position:"top-right"})},nj=()=>{r.resume&&r.current_location?(nA("active",!0),X.Ay.capture("activate_talent_profile_v5",{resume:r.resume,current_location:r.current_location})):E({title:"Unable to go live",description:"Add missing information to go live.",status:"error",duration:3e3,isClosable:!0,position:"top-right"})};return(0,a.jsxs)("div",{children:[r&&r.resume?(0,a.jsx)("div",{className:"flex justify-center text-sm pt-4 font-medium ".concat((null==r?void 0:r.active)?"bg-gray-100":"bg-red-100 text-red-800"),children:(null==r?void 0:r.active)?(0,a.jsx)("div",{className:"flex rounded-full flex-col items-center text-center p-2 lg:p-0",children:(0,a.jsx)("button",{className:"font-bold",onClick:()=>{nT()},children:"Your profile is live \uD83E\uDD73\uD83C\uDF89"})}):(0,a.jsxs)("div",{className:"flex items-center space-x-2 p-2 lg:p-0",children:[(0,a.jsx)("span",{children:"Your profile is hidden from companies"}),(0,a.jsx)("button",{onClick:()=>nj(),className:"underline font-bold",children:"Go live"})]})}):null,(0,a.jsxs)(a.Fragment,{children:[r?(0,a.jsx)(a.Fragment,{children:(0,a.jsx)("div",{className:"flex justify-center pt-4 pb-32 px-4 lg:px-0 ".concat((null==r?void 0:r.active)?"bg-gray-100":"bg-red-100"),children:(0,a.jsx)("div",{className:"flex flex-col flex-auto lg:max-w-2xl",children:(0,a.jsxs)("div",{className:"flex flex-col p-8 bg-white rounded-md sm:rounded-lg md:rounded-2xl lg:rounded-3xl shadow sm:shadow-md md:shadow-lg lg:shadow-xl xl:shadow-2xl",children:[r?(0,a.jsxs)("div",{className:"flex flex-col items-center",children:[e?(0,a.jsxs)(B(),{href:"/account",className:"text-gray-800 text-sm font-medium underline",children:[(null==t?void 0:t.name)||"Unknown Name"," \xb7 ",e.email]}):null,(0,a.jsxs)("div",{className:"flex flex-col w-full mt-4",children:[(0,a.jsx)("div",{className:"relative",children:ni?(0,a.jsxs)("div",{className:"flex items-center space-x-8 justify-between border border-gray-300 rounded-md shadow-sm px-4 py-4 w-full",children:[(0,a.jsxs)("div",{className:"block bg-white text-gray-900",children:[(0,a.jsx)(B(),{href:ni,target:"_blank",rel:"noopener noreferrer",className:"text-black underline font-medium",children:"Resume"}),(0,a.jsx)("button",{className:"ml-4 font-bold text-red-500",onClick:()=>{ng()},children:"X"})]}),(0,a.jsxs)("div",{className:"flex items-center space-x-4 text-sm font-medium",children:[(null==r?void 0:r.active)?(0,a.jsxs)("div",{className:"flex items-center space-x-0.5 text-yellow-600",children:[(0,a.jsx)("span",{children:"Live!"}),(0,a.jsx)("button",{onClick:()=>{nT()},children:(0,a.jsx)(H.A,{className:"h-4 w-4 ml-1"})})]}):(0,a.jsx)("div",{className:"text-red-800",children:"Hidden"}),(0,a.jsx)(c.d,{colorScheme:"yellow",isChecked:null==r?void 0:r.active,onChange:n=>{n.target.checked?nj():nA("active",!1)}})]})]}):(0,a.jsx)("div",{className:"flex items-end space-x-8 w-full px-4 py-4 bg-white border border-gray-300 rounded-md text-gray-900 shadow-sm focus:border-yellow-600 focus:outline-none",children:(0,a.jsxs)("div",{className:"flex flex-col w-full",children:[(0,a.jsxs)("span",{className:"font-medium mb-2 text-sm text-gray-500",children:["Resume ",(0,a.jsx)("span",{className:"text-red-600",children:"*"})]}),(0,a.jsx)("input",{className:"block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 focus:outline-none ",accept:"application/msword, application/pdf, .doc,.docx",onChange:n=>{if(n.target.files&&n.target.files[0]){let e=n.target.files[0];nr(e),"application/pdf"!==e.type?ns(!1):ns(!0)}},disabled:M,type:"file",placeholder:"Resume"})]})})}),!(null==r?void 0:r.active)&&(0,a.jsx)("button",{onClick:()=>nK(),className:"flex justify-center mt-8 text-red-600 font-medium",children:"FAQ: Who can see my resume?"}),(0,a.jsx)("hr",{className:"my-8"}),(0,a.jsxs)("span",{className:"mb-4 text-gray-500 font-medium text-sm",children:["Location Preferences"," ",(0,a.jsx)("span",{className:"text-red-600",children:"*"})]}),(0,a.jsxs)("div",{className:"flex flex-col text-start w-full",children:[nf?(0,a.jsxs)("button",{onClick:()=>nh(!nx),className:"text-start text-sm",children:["\uD83D\uDCCD Current location:"," ",(0,a.jsx)("span",{className:"text-start ".concat(nx?"text-gray-500":"text-black underline"),children:(null==nf?void 0:nf.formatted_address)||null})]}):null,nx?(0,a.jsxs)("div",{className:"flex flex-col w-full",children:[nf?null:(0,a.jsxs)("span",{className:"mt-2 text-sm",children:["\uD83D\uDCCD Current location"," ",(0,a.jsx)("span",{className:"text-red-600",children:"*"})]}),(0,a.jsx)(W,{onCoordinatesChange:n=>{ny(n),nh(!1)}})]}):null,(0,a.jsxs)("div",{className:"flex items-center text-sm mt-8 mb-2",children:[(0,a.jsx)("span",{children:"Additional locations (Optional)"}),(0,a.jsxs)(f.A,{children:[(0,a.jsx)(y.W,{children:(0,a.jsx)("button",{children:(0,a.jsx)(H.A,{className:"h-4 w-4 ml-1 text-gray-500"})})}),(0,a.jsx)(v.h,{children:(0,a.jsx)(b.D,{children:"Where else are you open to working? Include remote locations."})})]})]}),(0,a.jsx)(Q,{selectedRegionDropdown:np,setSelectedRegionDropdown:nc,onCountriesChange:n=>{nc(n.map(n=>({value:n,label:G.r4[n],type:"country"}))),ne(n)}})]}),(0,a.jsx)("hr",{className:"flex flex-col my-8"}),(0,a.jsx)("span",{className:"mb-4 text-gray-500 font-medium text-sm",children:"Additional Information (Optional)"}),(0,a.jsxs)("div",{className:"flex items-center w-full border border-gray-300 rounded-md space-x-4 px-4",children:[(0,a.jsx)(A.QEs,{className:"text-black h-5 w-5"}),(0,a.jsx)("input",{id:"linkedin",type:"text",value:L,className:"w-full py-2 text-gray-900 rounded-md shadow-sm focus:border-yellow-600 focus:outline-none",onChange:n=>C(n.target.value),placeholder:"https://linkedin.com/in/..."})]}),(0,a.jsxs)("div",{className:"flex items-center w-full border border-gray-300 rounded-md space-x-4 px-4 mt-2",children:[(0,a.jsx)(A.f35,{className:"text-black h-5 w-5"}),(0,a.jsx)("input",{id:"website",type:"text",value:q,className:"w-full py-2 text-gray-900 rounded-md shadow-sm focus:border-yellow-600 focus:outline-none",onChange:n=>Y(n.target.value),placeholder:"https://abc.com/..."})]}),(0,a.jsxs)("div",{className:"flex items-center w-full border border-gray-300 rounded-md space-x-4 px-4 mt-2",children:[(0,a.jsx)(A.Tsk,{className:"text-black h-5 w-5"}),(0,a.jsx)("input",{id:"min_salary",placeholder:"Base salary expectation",value:U,className:"w-full py-2 text-gray-900 rounded-md shadow-sm focus:border-yellow-600 focus:outline-none",onChange:n=>Z(n.target.value)})]}),(0,a.jsx)("hr",{className:"flex flex-col my-8"}),(0,a.jsxs)("div",{className:"mb-4 flex items-center space-x-1",children:[(0,a.jsx)("span",{className:"text-gray-500 font-medium text-sm",children:"Hidden Companies (Optional)"}),(0,a.jsxs)(f.A,{isLazy:!0,closeOnBlur:!0,closeOnEsc:!0,wid:!0,children:[(0,a.jsx)(y.W,{children:(0,a.jsx)("button",{children:(0,a.jsx)(H.A,{className:"h-4 w-4 text-gray-500"})})}),(0,a.jsx)(v.h,{children:(0,a.jsx)(k.e,{children:(0,a.jsxs)("div",{className:"flex flex-col text-sm",children:[(0,a.jsxs)("span",{children:["Add email domain names you'd like to hide from. For example, if you want to hide your profile from Meta\xa0recruiters, enter ",(0,a.jsx)("span",{className:"font-bold",children:'"meta.com"'})]}),(0,a.jsx)("span",{className:"mt-2",children:"Companies won't be able to access your identity until you accept their intro request so this step is really optional :)"})]})})})]})]}),(0,a.jsx)(J,{companyDomains:nv,setCompanyDomains:nb})]})]}):null,(0,a.jsx)("div",{className:"flex justify-end mt-8",children:(0,a.jsx)("button",{className:"flex-none font-medium rounded px-6 py-2 ".concat(nB()?"bg-gray-200 text-gray-500":"bg-black text-white"),disabled:nB(),onClick:async()=>nE(),children:M?"Saving...":"Save Profile"})})]})})})}):i||l?(0,a.jsx)("div",{className:"flex justify-center mt-32",children:(0,a.jsx)(g.P,{isIndeterminate:!0,color:"black",size:"44px"})}):(0,a.jsxs)("div",{className:"flex flex-col items-center text-center px-4",children:[(0,a.jsxs)("div",{className:"flex flex-col items-center text-center mt-4",children:[(0,a.jsx)(j.A,{width:"250px",height:"250px",animationData:O}),(0,a.jsxs)("div",{className:"flex flex-col items-center text-sm md:text-base",children:[(0,a.jsx)("span",{className:"mt-8 bg-orange-100 text-orange-800 px-4 py-1.5 font-medium rounded-full",children:"HiringCafe Private Talent Network"}),(0,a.jsx)("span",{className:"mt-4 text-3xl font-medium",children:"Let Companies Apply to You"}),(0,a.jsx)("span",{className:"mt-4 text-lg lg:max-w-xl",children:"Submit your resume and let companies apply to you directly on HiringCafe. Go live anytime, and hide your profile whenever you want. Your identity is only revealed when you accept their intro request. Never worry about spam again!"})]}),(0,a.jsxs)("div",{className:"flex flex-col mt-8",children:[(0,a.jsx)("button",{className:"bg-yellow-600 text-yellow-50 font-semibold rounded px-8 py-2 m-1 text-2xl",disabled:M,onClick:async()=>{await nP()},children:M?(0,a.jsx)(g.P,{isIndeterminate:!0,size:"24px",color:"yellow.800"}):(0,a.jsx)("span",{children:"Get Started Now"})}),(0,a.jsx)("span",{className:"mt-2 font-medium",children:"It takes 30 seconds, and it's 100% free!"})]})]}),(0,a.jsxs)("div",{className:"flex flex-col flex-auto justify-start items-start text-start lg:max-w-xl my-16",children:[(0,a.jsx)("span",{className:"text-xl font-medium mb-4 text-yellow-600",children:"Frequently Asked Questions"}),(0,a.jsx)(I.A,{items:N.DM})]})]}),(0,a.jsxs)(_.aF,{isOpen:nk,onClose:n_,children:[(0,a.jsx)($.m,{}),(0,a.jsxs)(T.$,{children:[(0,a.jsx)(V.r,{children:"Delete resume"}),(0,a.jsx)(D.s,{}),(0,a.jsx)(K.c,{children:(0,a.jsx)("span",{children:"Your profile will no longer be visible to recruiters if you delete your resume. You can upload a new resume anytime. Are you sure you want to delete your resume?"})}),(0,a.jsx)(S.j,{children:(0,a.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,a.jsx)(P.$,{colorScheme:"red",onClick:async()=>{await nG(),n_()},isLoading:M,children:"Delete Resume"}),(0,a.jsx)(P.$,{onClick:n_,children:"Cancel"})]})})]})]}),(0,a.jsxs)(_.aF,{isOpen:n$,onClose:nV,size:"xl",children:[(0,a.jsx)($.m,{}),(0,a.jsxs)(T.$,{children:[(0,a.jsx)(V.r,{children:"Your Profile is Live!"}),(0,a.jsx)(D.s,{}),(0,a.jsx)(K.c,{children:(0,a.jsxs)("div",{className:"flex flex-col mb-8 text-sm",children:[(0,a.jsx)(j.A,{width:"100px",height:"100px",animationData:o,customOptions:{loop:!1}}),(0,a.jsx)("span",{className:"mt-2 font-light",children:"Frequently Asked Questions"}),(0,a.jsx)("span",{className:"font-bold mt-4",children:"What happens next?"}),(0,a.jsx)("span",{className:"mt-2",children:"Companies will be able to view your resume (your name and contact info redacted!) and send you an intro request. They'll be able to view your personal information only when you accept their intro request. You'll receive a notification via Email right away if a recruiter wants to chat."}),(0,a.jsx)("span",{className:"font-bold mt-6",children:"What do I need to do now?"}),(0,a.jsx)("span",{className:"mt-2",children:"Nothing! You can sit back, relax, and continue job hunting. You'll receive notifications when recruiters reach out."}),(0,a.jsx)("span",{className:"font-bold mt-6",children:"Who can access my information?"}),(0,a.jsx)("span",{className:"mt-2",children:"Approved companies who are actively hiring on HiringCafe. Your identity and contact information is only revealed when you accept their intro request."}),(0,a.jsx)("span",{className:"font-bold mt-6",children:"Can I hide my profile?"}),(0,a.jsx)("span",{className:"mt-2",children:'Yes, you can hide your profile anytime. You can also hide your profile from specific companies by adding them to the "Hidden Companies" section below.'}),(0,a.jsx)("span",{className:"font-bold mt-6",children:"Can they see what jobs I've applied to?"}),(0,a.jsx)("span",{className:"mt-2",children:"No, absolutely not! All your account activity - job applications, tracking applications, messages, and etc - will never be shared with companies."})]})})]})]}),(0,a.jsxs)(_.aF,{isOpen:nD,onClose:nS,size:"2xl",children:[(0,a.jsx)($.m,{}),(0,a.jsxs)(T.$,{children:[(0,a.jsx)(V.r,{}),(0,a.jsx)(D.s,{}),(0,a.jsx)(K.c,{children:(0,a.jsxs)("div",{className:"flex flex-col flex-auto justify-start items-start text-start p-2",children:[(0,a.jsx)("span",{className:"text-xl font-medium mb-4 text-yellow-600",children:"Frequently Asked Questions"}),(0,a.jsx)(I.A,{items:N.DM})]})})]})]})]})]})};var nn=i(96139),ne=i(73558),ni=i(82463);let na=function(){let{seekerUserData:n}=(0,F.A)();return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r(),{children:[(0,a.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),(0,a.jsx)("meta",{charSet:"utf-8"}),(0,a.jsx)("title",{children:"HiringCafe Talent Network"}),(0,a.jsx)("meta",{property:"og:title",content:"HiringCafe Talent Network"},"ogtitle"),(0,a.jsx)("meta",{property:"og:description",content:"Join the HiringCafe Talent Network and let companies apply to you!"},"ogdesc"),(0,a.jsx)("meta",{name:"description",content:"Join the HiringCafe Talent Network and let companies apply to you!"})]}),(0,a.jsx)("div",{className:"hidden lg:block p-4 sticky top-0 bg-white md:z-20 md:px-8 xl:px-16",children:(0,a.jsx)(ne.A,{})}),n&&(0,a.jsx)("div",{className:"flex justify-center",children:(0,a.jsxs)("div",{className:"flex flex-col items-center",children:[(0,a.jsx)("span",{className:"text-gray-600 text-sm",children:"Currently in Beta"}),(0,a.jsx)(B(),{href:"/inbox",className:"p-2",children:(0,a.jsxs)("div",{className:"flex items-center space-x-3 py-2",children:[(0,a.jsx)(ni.A,{className:"h-6 w-6"}),(0,a.jsx)("span",{className:"font-medium text-lg",children:"View Inbox"})]})})]})}),(0,a.jsx)("div",{className:"min-h-screen lg:min-h-0",children:(0,a.jsx)(Z,{})}),(0,a.jsx)(nn.A,{})]})}}},n=>{var e=e=>n(n.s=e);n.O(0,[2433,1784,3139,1106,3721,5334,9327,4512,636,6593,8792],()=>e(57278)),_N_E=n.O()}]);